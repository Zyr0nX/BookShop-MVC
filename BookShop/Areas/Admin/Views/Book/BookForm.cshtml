@model BookShop.Areas.Admin.ViewModel.BookViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}



<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>@Model.Title</h1>
            </div>

        </div>
    </div><!-- /.container-fluid -->
</section>



<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <!-- /.card-header -->
                    <div class="card-body">
                        <div class="row">
                                @using (Html.BeginForm("Save", "Book", FormMethod.Post, new { style = "display: flex; width: 100%;", enctype = "multipart/form-data" }))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.HiddenFor(model => model.Id)
                                    <div class="col-md-8">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-12">
                                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-12">
                                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @id = "summernote" } })
                                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-horizontal">

                                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label col-md-4" })
                                                <div class="col-md-12">
                                                    @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-4" })
                                                <div class="col-md-12">
                                                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-4" })
                                                <div class="col-md-12">
                                                    @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                                                </div>
                                            </div>



                                            <div class="form-group">
                                                @Html.LabelFor(model => model.IdCategory, htmlAttributes: new { @class = "control-label col-md-4" })
                                                <div class="col-md-12">
                                                    @Html.DropDownListFor(m => m.IdCategory, new SelectList(Model.Categories, "Id", "Name"), "", new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.IdCategory, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.IdPublisher, htmlAttributes: new { @class = "control-label col-md-4" })
                                                <div class="col-md-12">
                                                    @Html.DropDownListFor(m => m.IdPublisher, new SelectList(Model.Publishers, "Id", "Name"), "", new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.IdPublisher, "", new { @class = "text-danger" })
                                                </div>
                                            </div>



                                            <div class="form-group">
                                                @Html.LabelFor(model => model.IdAuthor, htmlAttributes: new { @class = "control-label col-md-4" })
                                                <div class="col-md-12">
                                                    @Html.DropDownListFor(m => m.IdAuthor, new SelectList(Model.Authors, "Id", "Name"), "", new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.IdAuthor, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-4" })

                                                <div class="col-md-12 custom-file" style="width:96%; margin-left:6px">
                                                    @Html.EditorFor(model => model.Photo, new
                                                    {
                                                        htmlAttributes = new
                                                        {
                                                            @class = "custom-file-input",
                                                            id = "exampleInputFile",
                                                            @type = "file",
                                                            accept = "image/*"
                                                        }
                                                    })
                                                    
                                                    <label class="custom-file-label" for="exampleInputFile">Choose file</label>

                                                    @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @if (Model.Id == 0)
                                                {
                                                    <img class="col-md-5" id="blah" src="~/Areas/Admin/Data/BookImage/150x200.png" alt="placeholder" style="width:150px; height:200px" />
                                                }
                                                else
                                                {
                                                    <img class="col-md-5" id="blah" src="~/Areas/Admin/Data/BookImage/@Model.Photo" alt="placeholder" style="width:150px; height:200px" />

                                                }
                                            </div>


                                            <div class="form-group">
                                                <div class="col-md-offset-2 col-md-10">
                                                    <input type="submit" value="Save" class="btn btn-default" />
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                }
                        </div>



                    </div>
                </div>
            </div>
        </div>
    </div>
</section>


<script>
    $(document).ready(function () {
        $('select').select2();

    $('#summernote').summernote();
    });

    bsCustomFileInput.init();

    exampleInputFile.onchange = evt => {
        const [file] = exampleInputFile.files
        if (file) {
            blah.src = URL.createObjectURL(file)
        }
    }
</script>